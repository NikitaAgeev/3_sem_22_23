Напишите программу-оболочку, которая позволит вам:
- запускать другие программы через командную строку, циклически получая команды из STDIN и запуская их где-то, например. в дочернем процессе.
- получить коды выхода завершенных программ
- использовать конвейерную обработку программных последовательностей, например: «env | grep ИМЯ ХОСТА | Туалет"
## ЧАЕВЫЕ:
1. Используйте "2_fork_wait_exit.c" и "4_exec_dir.c" из примеров. Объедините их.
2. Разобрать входную строку в соответствии с типом exec* (например, см. "man execlp").
   а) если используется execvp, разбиение строки на «путь» и «аргументы» — это все, что вам нужно.
   b) программа должна быть чувствительна к среде (переменная $PATH): например, '/bin/ls' должна выполняться со строкой 'ls'.
3. Соберите коды выхода через waitpid/WEXITSTATUS.
4. Обратите внимание, что размер команды может достигать большого количества килобайт: введите cmd "getconf ARG_MAX", чтобы проверить это.
5. Пусть cmd может представлять собой последовательность программ, которые могут выполняться последовательно, если между именами программ стоит символ «|»,
в этом случае вывод i-1-го должен быть перенаправлен со стандартного вывода на стандартный ввод i-го. См. пример выше. Реализуйте эту функцию.